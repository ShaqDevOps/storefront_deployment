

# version: "3.9"

# services:
#   app:
#     build: .
#     restart: always
#     ports:
#       - "9000:9000"
#     env_file:
#       - .env
#     environment:
#       - DJANGO_SETTINGS_MODULE=storefront.dev

#   proxy:
#     build:
#       context: ./docker/proxy
#     restart: always
#     depends_on:
#       - app
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - certbot-web:/vol/www
#       - proxy-dhparams:/vol/proxy
#       - certbot-certs:/etc/letsencrypt
#     environment:
#       - DOMAIN=${DOMAIN}

#   certbot:
#     build:
#       context: ./docker/certbot
#     command: echo "Skipping..."
#     environment:
#       - EMAIL=${ACME_DEFAULT_EMAIL}
#       - DOMAIN=${DOMAIN}
#     volumes:
#       - certbot-web:/vol/www
#       - certbot-certs:/etc/letsencrypt/
#     depends_on:
#       - proxy

# volumes:
#   certbot-web:
#   proxy-dhparams:
#   certbot-certs:


version: "3.9"

services:
  app:
    build: .
    restart: always
    ports:
      - "9000:9000"
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=storefront.dev
    volumes:
      - static-data:/vol/static  # Mount for static files

  proxy:
    build:
      context: ./docker/proxy
    restart: always
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certbot-web:/vol/www
      - proxy-dhparams:/vol/proxy
      - certbot-certs:/etc/letsencrypt
      - static-data:/vol/static  # Mount the same volume to serve static files
    environment:
      - DOMAIN=${DOMAIN}

  certbot:
    build:
      context: ./docker/certbot
    command: echo "Skipping..."
    environment:
      - EMAIL=${ACME_DEFAULT_EMAIL}
      - DOMAIN=${DOMAIN}
    volumes:
      - certbot-web:/vol/www
      - certbot-certs:/etc/letsencrypt/
    depends_on:
      - proxy

volumes:
  certbot-web:
  proxy-dhparams:
  certbot-certs:
  static-data:  # Define the volume for static files
