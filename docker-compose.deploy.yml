# version: "3.9"

# services:
#   app:
#     build:
#       context: .
#     restart: always
#     environment:
#       - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
#       - DJANGO_ALLOWED_HOSTS=${DOMAIN}
#       - DATABASE_NAME=${DATABASE_NAME}  # MySQL database name
#       - DATABASE_USER=${DATABASE_USER}  # MySQL database user
#       - DATABASE_PASSWORD=${DATABASE_PASSWORD}  # MySQL database password
#       - DATABASE_HOST=${DATABASE_HOST}  # MySQL database host

#   proxy:
#     build:
#       context: ./docker/proxy
#     restart: always
#     depends_on:
#       - app
#     ports:
#       - 80:80
#       - 443:443
#     volumes:
#       - certbot-web:/vol/www
#       - proxy-dhparams:/vol/proxy
#       - certbot-certs:/etc/letsencrypt
#     environment:
#       - DOMAIN=${DOMAIN}

#   certbot:
#     build:
#       context: ./docker/certbot
#     command: echo "Skipping..."
#     environment:
#       - EMAIL=${ACME_DEFAULT_EMAIL}
#       - DOMAIN=${DOMAIN}
#     volumes:
#       - certbot-web:/vol/www
#       - certbot-certs:/etc/letsencrypt/
#     depends_on:
#       - proxy

# volumes:
#   certbot-web:
#   proxy-dhparams:
#   certbot-certs:


version: "3.9"

services:
  app:
    build: .
    restart: always
    command: sh -c "python /app/manage.py runserver 0.0.0.0:8000"  # Running Django dev server
    volumes:
      - ./storefront:/app  # Mapping the storefront directory into the container
    ports:
      - "8000:8000"  # Expose the port that the Django app runs on
    env_file:
      - .env
    environment:
      - SECRET_KEY=${SECRET_KEY}  # Update the variable name to match the .env and Django settings
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}  # Ensure this matches the .env file
      - RDS_DB_NAME=${RDS_DB_NAME}  # MySQL database name
      - RDS_USERNAME=${RDS_USERNAME}  # MySQL database user
      - RDS_PASSWORD=${RDS_PASSWORD}  # MySQL database password
      - RDS_HOSTNAME=${RDS_HOSTNAME}  # MySQL database host
      - RDS_PORT=${RDS_PORT}  # MySQL database port (typically 3306)
  proxy:
    build:
      context: ./docker/proxy
    restart: always
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certbot-web:/vol/www
      - proxy-dhparams:/vol/proxy
      - certbot-certs:/etc/letsencrypt
    environment:
      - DOMAIN=${DOMAIN}

  certbot:
    build:
      context: ./docker/certbot
    command: echo "Skipping..."
    environment:
      - EMAIL=${ACME_DEFAULT_EMAIL}
      - DOMAIN=${DOMAIN}
    volumes:
      - certbot-web:/vol/www
      - certbot-certs:/etc/letsencrypt/
    depends_on:
      - proxy

volumes:
  certbot-web:
  proxy-dhparams:
  certbot-certs:
